var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.findInternal=function(a,b,c){a instanceof String&&(a=String(a));for(var d=a.length,e=0;e<d;e++){var f=a[e];if(b.call(c,f,e,a))return{i:e,v:f}}return{i:-1,v:void 0}};$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){a!=Array.prototype&&a!=Object.prototype&&(a[b]=c.value)};
$jscomp.getGlobal=function(a){return"undefined"!=typeof window&&window===a?a:"undefined"!=typeof global&&null!=global?global:a};$jscomp.global=$jscomp.getGlobal(this);$jscomp.polyfill=function(a,b,c,d){if(b){c=$jscomp.global;a=a.split(".");for(d=0;d<a.length-1;d++){var e=a[d];e in c||(c[e]={});c=c[e]}a=a[a.length-1];d=c[a];b=b(d);b!=d&&null!=b&&$jscomp.defineProperty(c,a,{configurable:!0,writable:!0,value:b})}};
$jscomp.polyfill("Array.prototype.find",function(a){return a?a:function(a,c){return $jscomp.findInternal(this,a,c).v}},"es6","es3");
$(document).ready(function(){$("#ivy tbody").ivy({onInit:function(){for(var a=this.ivy.getMaxRows(),b=0;b<=a;b++)this.onCellValueChangeAfter(b,1)},onCellValueChangeBefore:function(a,b,c){if(1===c||2===c)a=a.toTime();return a},onCellValueChangeAfter:function(a,b){if(1===b||2===b){b=this.updateCellTime(a,1);var c=this.updateCellTime(a,2,b,60);b=moment.duration(c.diff(b)).asHours();b.toFixed&&(b=Math.abs(b).toFixed(2));$(this.ivy.getCell(a,3)).text(b);a=this.findConsecutive(a,0);b=this.sumConsecutive(a);
$(this.ivy.getCell(a[0],4)).text(b)}},onRowInsertAfter:function(a,b){b.find("td:not(:first-child)").empty()},updateCellTime:function(a,b,c,d){a=$(this.ivy.getCell(a,b));b=$(a).text();""==b&&(b=moment(c).add(d,"minutes"),b=b.format("hh:mm A"),$(a).text(b));return moment.utc(b,"hh:mm A")},findConsecutive:function(a,b){for(var c=a,d=$(this.ivy.getCell(a,b)).text(),e=d;d==e&&0<=--c;)e=$(this.ivy.getCell(c,b)).text();var f=c+1,g=this.ivy.getMaxRows();c=a;for(e=d;d==e&&++c<g;)e=$(this.ivy.getCell(c,b)).text();
return[f,c-1]},sumConsecutive:function(a){for(var b=0,c=a[0];c<=a[1];c++)b+=parseFloat($(this.ivy.getCell(c,3)).text(),10)||0;b.toFixed&&(b=b.toFixed(2));return b}})});
